schema_version = "1.0.0"

# Example of manifest file for a Blender extension
# Change the values according to your extension
id = "open_stage_blender_dmx"
version = "1.4.5"
name = "BlenderDMX"
tagline = "DMX visualization and programming, with GDTF/MVR and Networking"
maintainer = "Open Stage"
# Supported types: "add-on", "theme"
type = "add-on"

# Optional: add-ons can list which resources they will require:
# * "files" (for access of any filesystem operations)
# * "network" (for internet access)
# * "clipboard" (to read and/or write the system clipboard)
# * "camera" (to capture photos and videos)
# * "microphone" (to capture audio)
permissions = ["files", "network"]

# Optional link to documentation, support, source files, etc
website = "https://blenderdmx.eu/"

# Optional list defined by Blender and server, see:
# https://docs.blender.org/manual/en/dev/extensions/tags.html
tags = ["Lighting", "Animation"]

blender_version_min = "4.2.0"
# Optional: maximum supported Blender version
# blender_version_max = "5.1.0"

# License conforming to https://spdx.org/licenses/ (use "SPDX: prefix)
# https://docs.blender.org/manual/en/dev/extensions/licenses.html
license = [
  "SPDX:MIT",
]
# Optional: required by some licenses.
# copyright = [
#   "2002-2024 Developer Name",
#   "1998 Company Name",
# ]

# Optional list of supported platforms. If omitted, the extension will be available in all operating systems.
# platforms = ["windows-x64", "macos-arm64", "linux-x64"]
# Other supported platforms: "windows-arm64", "macos-x64"

# Optional: bundle 3rd party Python modules.
# https://docs.blender.org/manual/en/dev/extensions/python_wheels.html
wheels = [
  "wheels/pygdtf-1.0.3-py3-none-any.whl",
  "wheels/pymvr-0.1.0-py3-none-any.whl",
  "wheels/sacn-1.9.1-py3-none-any.whl",
  "wheels/oscpy-0.6.0-py2.py3-none-any.whl",
  "wheels/ifaddr-0.2.0-py3-none-any.whl",
  "wheels/async_timeout-4.0.3-py3-none-any.whl",
  "wheels/zeroconf-0.132.2-cp311-cp311-manylinux_2_38_x86_64.whl",
]

# Optional: build setting.
# https://docs.blender.org/manual/en/dev/extensions/command_line_arguments.html#command-line-args-extension-build
[build]
paths_exclude_pattern = [
  "/.git/",
  "__pycache__/",
  "/__pycache__/",
  "*.log",
  "ruff.toml",
  "scripts/",
  ".*",
  "*.pyc",
  "__pycache__",
  "*.zip",
  ".mypy_cache",
  ".pytest_cache",
  "data.json",
  "ASSETS_ATTRIBUTION.md",
  "RELEASE.md",
  "DEPENDENCIES.md",
  "DEVELOPMENT.md",
]
